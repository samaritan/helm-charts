---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-gateway
  namespace: {{ .Release.Namespace | quote }}
data:
  gateway.conf: |
    gzip on;
    gzip_proxied any;
    gzip_types application/json;
    gzip_min_length 1000;

    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=cache:10m max_size=256m
                     inactive=60m use_temp_path=off;

    server {
      listen 80;

      location / {
        # Reject requests with unsupported HTTP method
        if ($request_method !~ ^(GET|POST|HEAD|OPTIONS|PUT|DELETE)$) {
          return 405;
        }

        proxy_pass http://127.0.0.1:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Cache Configuration
        proxy_cache cache;
        proxy_cache_use_stale updating;
        proxy_cache_lock on;
        proxy_cache_valid 30m;
        proxy_cache_bypass $http_upgrade;
        proxy_ignore_headers X-Accel-Expires Expires Cache-Control;
        add_header Cache-Control "no-cache, must-revalidate, max-age=0";
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis
  namespace: {{ .Release.Namespace | quote }}
data:
  redis.conf: |
    maxmemory 4gb
    maxmemory-policy allkeys-lru
